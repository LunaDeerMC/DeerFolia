From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: zhangyuheng <zhangyuheng@lunadeer.cn>
Date: Tue, 11 Mar 2025 13:50:42 +0800
Subject: [PATCH] Allow sand duplication


diff --git a/net/minecraft/world/entity/Entity.java b/net/minecraft/world/entity/Entity.java
index 721b8b74baeac19cf421857c7987419b80cf5cc5..54b227a87a56f234e1da3fde5b10b8d78f72e917 100644
--- a/net/minecraft/world/entity/Entity.java
+++ b/net/minecraft/world/entity/Entity.java
@@ -4234,14 +4234,19 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
                         targetPos, 16, // load 16 blocks to be safe from block physics
                         ca.spottedleaf.concurrentutil.util.Priority.HIGH,
                         (chunks) -> {
-                            net.minecraft.world.level.levelgen.feature.EndPlatformFeature.createEndPlatform(destination, targetPos.below(), true, null);
+                            // DeerFolia start - Vanilla end teleportation
+                            // net.minecraft.world.level.levelgen.feature.EndPlatformFeature.createEndPlatform(destination, targetPos.below(), true, null);
+                            Vec3 finalPos;
+                            if (this instanceof Player) finalPos = Vec3.atBottomCenterOf(targetPos.below());
+                            else finalPos = Vec3.atBottomCenterOf(targetPos);
+                            // DeerFolia end
 
                             // the portal obsidian is placed at targetPos.y - 2, so if we want to place the entity
                             // on the obsidian, we need to spawn at targetPos.y - 1
                             portalInfoCompletable.complete(
                                 new net.minecraft.world.level.portal.TeleportTransition(
-                                    destination, Vec3.atBottomCenterOf(targetPos.below()), Vec3.ZERO, Direction.WEST.toYRot(), 0.0f,
-                                    Relative.union(Relative.DELTA, Set.of(Relative.X_ROT)),
+                                    destination, finalPos, this.getDeltaMovement(), 90.0f, 0.0f,    // DeerFolia Vanilla end teleportation
+                                    // Relative.union(Relative.DELTA, Set.of(Relative.X_ROT)),  // DeerFolia Vanilla end teleportation
                                     TeleportTransition.PLAY_PORTAL_SOUND.then(TeleportTransition.PLACE_PORTAL_TICKET),
                                     org.bukkit.event.player.PlayerTeleportEvent.TeleportCause.END_PORTAL
                                 )
@@ -4438,6 +4443,11 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
         if (!this.canPortalAsync(destination, takePassengers)) {
             return false;
         }
+        // DeerFolia start - sync end platform spawning & entity teleportation
+        final java.util.function.Consumer<Entity> tpComplete = type == PortalType.END && destination.getTypeKey() == net.minecraft.world.level.dimension.LevelStem.END
+                ? e -> net.minecraft.world.level.levelgen.feature.EndPlatformFeature.createEndPlatform(destination, ServerLevel.END_SPAWN_POINT.below(), true)
+                : teleportComplete;
+        // DeerFolia end - sync end platform spawning & entity teleportation
 
         Vec3 initialPosition = this.position();
         ChunkPos initialPositionChunk = new ChunkPos(
@@ -4502,9 +4512,14 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
                         info.postTeleportTransition().onTransition(teleported);
                     }
 
-                    if (teleportComplete != null) {
-                        teleportComplete.accept(teleported);
+                    // DeerFolia start - sync end platform spawning & entity teleportation
+                    // if (teleportComplete != null) {
+                    //     teleportComplete.accept(teleported);
+                    // }
+                    if (tpComplete != null) {
+                        tpComplete.accept(teleported);
                     }
+                    // DeerFolia end - sync end platform spawning & entity teleportation
                 }
             );
         });
diff --git a/net/minecraft/world/entity/item/FallingBlockEntity.java b/net/minecraft/world/entity/item/FallingBlockEntity.java
index e77276b1dccebd5b768c3cdbe5e0206da32b91ff..f02dc6e305f8f5247cd47534292cb24c82f74937 100644
--- a/net/minecraft/world/entity/item/FallingBlockEntity.java
+++ b/net/minecraft/world/entity/item/FallingBlockEntity.java
@@ -67,7 +67,7 @@ public class FallingBlockEntity extends Entity {
     public float fallDamagePerDistance = 0.0F;
     @Nullable
     public CompoundTag blockData;
-    public boolean forceTickAfterTeleportToDuplicate;
+    public boolean forceTickAfterTeleportToDuplicate = true;    // DeerFolia - Sand duplication
     protected static final EntityDataAccessor<BlockPos> DATA_START_POS = SynchedEntityData.defineId(FallingBlockEntity.class, EntityDataSerializers.BLOCK_POS);
     public boolean autoExpire = true; // Paper - Expand FallingBlock API
 
diff --git a/net/minecraft/world/level/block/EndPortalBlock.java b/net/minecraft/world/level/block/EndPortalBlock.java
index 685c0fb071efd8e3c4e81cb89e93d8f7707773c1..096c400614df85fc6fecee68c28568183fd2b3a5 100644
--- a/net/minecraft/world/level/block/EndPortalBlock.java
+++ b/net/minecraft/world/level/block/EndPortalBlock.java
@@ -68,6 +68,11 @@ public class EndPortalBlock extends BaseEntityBlock implements Portal {
                 if (level.paperConfig().misc.disableEndCredits) {serverPlayer.seenCredits = true; return;} // Paper - Option to disable end credits
                 serverPlayer.showEndCredits();
             } else {
+                // DeerFolia start - unsafe teleportation
+                if (!(entity instanceof net.minecraft.world.entity.player.Player)) {
+                    entity.endPortalLogicAsync(pos);
+                }
+                // DeerFolia end
                 entity.setAsInsidePortal(this, pos);
             }
         }
