From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: zhangyuheng <zhangyuheng@lunadeer.cn>
Date: Tue, 11 Mar 2025 14:31:10 +0800
Subject: [PATCH] Dynamic Activation Brain


diff --git a/io/papermc/paper/entity/activation/ActivationRange.java b/io/papermc/paper/entity/activation/ActivationRange.java
index c0d23b0b5adca79ce451da8cca16dc3aeac2c799..bb170795a953b7614513a74aca160f6da6ba4d72 100644
--- a/io/papermc/paper/entity/activation/ActivationRange.java
+++ b/io/papermc/paper/entity/activation/ActivationRange.java
@@ -174,6 +174,24 @@ public final class ActivationRange {
                 }
 
                 ActivationRange.activateEntity(entity, bbByType); // Folia - threaded regions
+                // DeerFolia start - pufferfish DAB
+                if (cn.lunadeer.mc.deerfolia.DeerFoliaConfiguration.dynamicActivationBrain.enabled && entity.getType().dabEnabled) {
+                    if (!entity.activatedPriorityReset) {
+                        entity.activatedPriorityReset = true;
+                        entity.activatedPriority = cn.lunadeer.mc.deerfolia.DeerFoliaConfiguration.dynamicActivationBrain.maximumActivationPrio;
+                    }
+                    net.minecraft.world.phys.Vec3 playerVec = player.position();
+                    net.minecraft.world.phys.Vec3 entityVec = entity.position();
+                    double diffX = playerVec.x - entityVec.x, diffY = playerVec.y - entityVec.y, diffZ = playerVec.z - entityVec.z;
+                    int squaredDistance = (int) (diffX * diffX + diffY * diffY + diffZ * diffZ);
+                    int startDistance = cn.lunadeer.mc.deerfolia.DeerFoliaConfiguration.dynamicActivationBrain.startDistance;
+                    entity.activatedPriority = squaredDistance > startDistance * startDistance ?
+                            Math.max(1, Math.min(squaredDistance >> cn.lunadeer.mc.deerfolia.DeerFoliaConfiguration.dynamicActivationBrain.activationDistanceMod, entity.activatedPriority)) :
+                            1;
+                } else {
+                    entity.activatedPriority = 1;
+                }
+                // DeerFolia end - pufferfish DAB
             }
         }
     }
diff --git a/net/minecraft/server/level/ServerLevel.java b/net/minecraft/server/level/ServerLevel.java
index 5e3be75b27ed609be005e8169dc84c125518253e..232920124effaf94b1d958545c8c9c0a47f71bda 100644
--- a/net/minecraft/server/level/ServerLevel.java
+++ b/net/minecraft/server/level/ServerLevel.java
@@ -812,6 +812,7 @@ public class ServerLevel extends Level implements ServerEntityGetter, WorldGenLe
             regionizedWorldData // Folia - regionised ticking
                 .forEachTickingEntity( // Folia - regionised ticking
                     entity -> {
+                        entity.activatedPriorityReset = false; // DeerFolia - pufferfish DAB
                         if (!entity.isRemoved()) {
                             if (!tickRateManager.isEntityFrozen(entity)) {
                                 profilerFiller.push("checkDespawn");
diff --git a/net/minecraft/world/entity/Entity.java b/net/minecraft/world/entity/Entity.java
index 60004e94e749d297a970ad1dd5048e8332b97916..d5dbe66f6575da5edeb0c34587fddf354a67af9a 100644
--- a/net/minecraft/world/entity/Entity.java
+++ b/net/minecraft/world/entity/Entity.java
@@ -371,6 +371,8 @@ public abstract class Entity implements SyncedDataHolder, Nameable, EntityAccess
     public long activatedTick = Integer.MIN_VALUE;
     public boolean isTemporarilyActive;
     public long activatedImmunityTick = Integer.MIN_VALUE;
+    public boolean activatedPriorityReset = false; // DeerFolia - pufferfish DAB
+    public int activatedPriority = cn.lunadeer.mc.deerfolia.DeerFoliaConfiguration.dynamicActivationBrain.maximumActivationPrio; // DeerFolia - pufferfish DAB
 
     public void inactiveTick() {
     }
diff --git a/net/minecraft/world/entity/EntityType.java b/net/minecraft/world/entity/EntityType.java
index 6f00ffa05d9597917574357e0069c9b056aa5ce2..0c639113d474573f3f96dcc3b84889fbe5c1ab47 100644
--- a/net/minecraft/world/entity/EntityType.java
+++ b/net/minecraft/world/entity/EntityType.java
@@ -1092,6 +1092,7 @@ public class EntityType<T extends Entity> implements FeatureElement, EntityTypeT
     private final EntityDimensions dimensions;
     private final float spawnDimensionsScale;
     private final FeatureFlagSet requiredFeatures;
+    public boolean dabEnabled = false; // DeerFolia - pufferfish DAB
 
     private static <T extends Entity> EntityType<T> register(ResourceKey<EntityType<?>> key, EntityType.Builder<T> builder) {
         return Registry.register(BuiltInRegistries.ENTITY_TYPE, key, builder.build(key));
diff --git a/net/minecraft/world/entity/Mob.java b/net/minecraft/world/entity/Mob.java
index 1240fb5394b1475c8e95a0e65bd03f2d15565d6f..74278561be49f4a581c1a96e82988a8939503ca7 100644
--- a/net/minecraft/world/entity/Mob.java
+++ b/net/minecraft/world/entity/Mob.java
@@ -210,10 +210,10 @@ public abstract class Mob extends LivingEntity implements EquipmentUser, Leashab
     @Override
     public void inactiveTick() {
         super.inactiveTick();
-        if (this.goalSelector.inactiveTick()) {
+        if (this.goalSelector.inactiveTick(this.activatedPriority, true)) { // DeerFolia - pufferfish DAB
             this.goalSelector.tick();
         }
-        if (this.targetSelector.inactiveTick()) {
+        if (this.targetSelector.inactiveTick(this.activatedPriority, true)) { // DeerFolia - pufferfish DAB
             this.targetSelector.tick();
         }
     }
@@ -760,16 +760,20 @@ public abstract class Mob extends LivingEntity implements EquipmentUser, Leashab
         int i = this.tickCount + this.getId();
         if (i % 2 != 0 && this.tickCount > 1) {
             profilerFiller.push("targetSelector");
+            if (this.targetSelector.inactiveTick(this.activatedPriority, false)) // DeerFolia - pufferfish DAB
             this.targetSelector.tickRunningGoals(false);
             profilerFiller.pop();
             profilerFiller.push("goalSelector");
+            if (this.targetSelector.inactiveTick(this.activatedPriority, false)) // DeerFolia - pufferfish DAB
             this.goalSelector.tickRunningGoals(false);
             profilerFiller.pop();
         } else {
             profilerFiller.push("targetSelector");
+            if (this.targetSelector.inactiveTick(this.activatedPriority, false)) // DeerFolia - pufferfish DAB
             this.targetSelector.tick();
             profilerFiller.pop();
             profilerFiller.push("goalSelector");
+            if (this.targetSelector.inactiveTick(this.activatedPriority, false)) // DeerFolia - pufferfish DAB
             this.goalSelector.tick();
             profilerFiller.pop();
         }
diff --git a/net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger.java b/net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger.java
index f6c673b1abe53afcb14fd68d590431027ed29f67..0943b95459a7c47d61887e44c6a1cb1e1df89cd4 100644
--- a/net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger.java
+++ b/net/minecraft/world/entity/ai/behavior/VillagerPanicTrigger.java
@@ -36,7 +36,12 @@ public class VillagerPanicTrigger extends Behavior<Villager> {
 
     @Override
     protected void tick(ServerLevel level, Villager owner, long gameTime) {
-        if (gameTime % 100L == 0L) {
+        // DeerFolia start - pufferfish DAB
+        // if (time % 100L == 0L) {
+        if (owner.nextGolemPanic < 0) owner.nextGolemPanic = gameTime + 100;
+        if (--owner.nextGolemPanic < gameTime) {
+            owner.nextGolemPanic = -1;
+            // DeerFolia end - pufferfish DAB
             owner.spawnGolemIfNeeded(level, gameTime, 3);
         }
     }
diff --git a/net/minecraft/world/entity/ai/goal/GoalSelector.java b/net/minecraft/world/entity/ai/goal/GoalSelector.java
index 859b859d29b637200cf7c9a0bd52d9f712413e3d..b7fce26c855108803737a6ce70d118ee1c92258b 100644
--- a/net/minecraft/world/entity/ai/goal/GoalSelector.java
+++ b/net/minecraft/world/entity/ai/goal/GoalSelector.java
@@ -36,10 +36,16 @@ public class GoalSelector {
     }
 
     // Paper start - EAR 2
-    public boolean inactiveTick() {
+    // DeerFolia start - pufferfish DAB
+    // public boolean inactiveTick() {
+    public boolean inactiveTick(int tickRate, boolean inactive) {
+        if (inactive && !cn.lunadeer.mc.deerfolia.DeerFoliaConfiguration.dynamicActivationBrain.enabled) tickRate = 4; // reset to Paper's
+        tickRate = Math.min(tickRate, 3);
         this.curRate++;
-        return this.curRate % 3 == 0; // TODO newGoalRate was already unused in 1.20.4, check if this is correct
+        // return this.curRate % 3 == 0; // TODO newGoalRate was already unused in 1.20.4, check if this is correct
+        return this.curRate % tickRate == 0; // TODO newGoalRate was already unused in 1.20.4, check if this is correct
     }
+    // DeerFolia end
 
     public boolean hasTasks() {
         for (WrappedGoal task : this.availableGoals) {
diff --git a/net/minecraft/world/entity/animal/allay/Allay.java b/net/minecraft/world/entity/animal/allay/Allay.java
index b7b964bd4e2d611a3e48ece072d5787193077a92..9c42af5a9c2efa119790f6c72b7b5b6aa197c78c 100644
--- a/net/minecraft/world/entity/animal/allay/Allay.java
+++ b/net/minecraft/world/entity/animal/allay/Allay.java
@@ -224,10 +224,12 @@ public class Allay extends PathfinderMob implements InventoryCarrier, VibrationS
         return 0.4F;
     }
 
+    private int behaviorTick = 0; // DeerFolia - pufferfish DAB
     @Override
     protected void customServerAiStep(ServerLevel level) {
         ProfilerFiller profilerFiller = Profiler.get();
         profilerFiller.push("allayBrain");
+        if (this.behaviorTick++ % this.activatedPriority == 0) // DeerFolia - pufferfish DAB
         this.getBrain().tick(level, this);
         profilerFiller.pop();
         profilerFiller.push("allayActivityUpdate");
diff --git a/net/minecraft/world/entity/animal/armadillo/Armadillo.java b/net/minecraft/world/entity/animal/armadillo/Armadillo.java
index c1798db2972c8f2a343cf6e16fd9354ff212d906..037a4f8903168a58c427aa76bbe9c1e4816d1c13 100644
--- a/net/minecraft/world/entity/animal/armadillo/Armadillo.java
+++ b/net/minecraft/world/entity/animal/armadillo/Armadillo.java
@@ -133,10 +133,12 @@ public class Armadillo extends Animal {
         return ArmadilloAi.makeBrain(this.brainProvider().makeBrain(dynamic));
     }
 
+    private int behaviorTick = 0; // DeerFolia - pufferfish DAB
     @Override
     protected void customServerAiStep(ServerLevel level) {
         ProfilerFiller profilerFiller = Profiler.get();
         profilerFiller.push("armadilloBrain");
+        if (this.behaviorTick++ % this.activatedPriority == 0) // DeerFolia - pufferfish DAB
         ((Brain<Armadillo>)this.brain).tick(level, this);
         profilerFiller.pop();
         profilerFiller.push("armadilloActivityUpdate");
diff --git a/net/minecraft/world/entity/animal/axolotl/Axolotl.java b/net/minecraft/world/entity/animal/axolotl/Axolotl.java
index b0467750dab4c6f411fd2f318009d25f83d94bc0..16edcb36a619a3f31146d7e3c9a75fd164ded630 100644
--- a/net/minecraft/world/entity/animal/axolotl/Axolotl.java
+++ b/net/minecraft/world/entity/animal/axolotl/Axolotl.java
@@ -327,10 +327,12 @@ public class Axolotl extends Animal implements Bucketable {
         return true;
     }
 
+    private int behaviorTick = 0; // DeerFolia - pufferfish DAB
     @Override
     protected void customServerAiStep(ServerLevel level) {
         ProfilerFiller profilerFiller = Profiler.get();
         profilerFiller.push("axolotlBrain");
+        if (this.behaviorTick++ % this.activatedPriority == 0) // DeerFolia - pufferfish DAB
         this.getBrain().tick(level, this);
         profilerFiller.pop();
         profilerFiller.push("axolotlActivityUpdate");
diff --git a/net/minecraft/world/entity/animal/camel/Camel.java b/net/minecraft/world/entity/animal/camel/Camel.java
index 757b63ee059c95e673a098706b4ee7ab4fc21f70..45bdacbd78897f2581006e0ecdb77a09fd40ce78 100644
--- a/net/minecraft/world/entity/animal/camel/Camel.java
+++ b/net/minecraft/world/entity/animal/camel/Camel.java
@@ -157,11 +157,13 @@ public class Camel extends AbstractHorse {
         return pose == Pose.SITTING ? SITTING_DIMENSIONS.scale(this.getAgeScale()) : super.getDefaultDimensions(pose);
     }
 
+    private int behaviorTick = 0; // DeerFolia - pufferfish DAB
     @Override
     protected void customServerAiStep(ServerLevel level) {
         ProfilerFiller profilerFiller = Profiler.get();
         profilerFiller.push("camelBrain");
         Brain<?> brain = this.getBrain();
+        if (this.behaviorTick++ % this.activatedPriority == 0) // DeerFolia - pufferfish DAB
         ((Brain<Camel>)brain).tick(level, this);
         profilerFiller.pop();
         profilerFiller.push("camelActivityUpdate");
diff --git a/net/minecraft/world/entity/animal/frog/Frog.java b/net/minecraft/world/entity/animal/frog/Frog.java
index 66f503e045ccb0985ec718b39be07eea538fad8d..4316b7d1ce9b02f527316a2e54f1661fd6eefe5d 100644
--- a/net/minecraft/world/entity/animal/frog/Frog.java
+++ b/net/minecraft/world/entity/animal/frog/Frog.java
@@ -202,10 +202,12 @@ public class Frog extends Animal {
         VariantUtils.readVariant(input, Registries.FROG_VARIANT).ifPresent(this::setVariant);
     }
 
+    private int behaviorTick = 0; // DeerFolia - pufferfish DAB
     @Override
     protected void customServerAiStep(ServerLevel level) {
         ProfilerFiller profilerFiller = Profiler.get();
         profilerFiller.push("frogBrain");
+        if (this.behaviorTick++ % this.activatedPriority == 0) // DeerFolia - pufferfish DAB
         this.getBrain().tick(level, this);
         profilerFiller.pop();
         profilerFiller.push("frogActivityUpdate");
diff --git a/net/minecraft/world/entity/animal/frog/Tadpole.java b/net/minecraft/world/entity/animal/frog/Tadpole.java
index 17f58246849ed407821a987b200cc765eb7943f9..148d7a4c4c0d15068f8dde6a617d2194c43e9ef7 100644
--- a/net/minecraft/world/entity/animal/frog/Tadpole.java
+++ b/net/minecraft/world/entity/animal/frog/Tadpole.java
@@ -98,10 +98,12 @@ public class Tadpole extends AbstractFish {
         return SoundEvents.TADPOLE_FLOP;
     }
 
+    private int behaviorTick = 0; // DeerFolia - pufferfish DAB
     @Override
     protected void customServerAiStep(ServerLevel level) {
         ProfilerFiller profilerFiller = Profiler.get();
         profilerFiller.push("tadpoleBrain");
+        if (this.behaviorTick++ % this.activatedPriority == 0) // DeerFolia - pufferfish DAB
         this.getBrain().tick(level, this);
         profilerFiller.pop();
         profilerFiller.push("tadpoleActivityUpdate");
diff --git a/net/minecraft/world/entity/animal/goat/Goat.java b/net/minecraft/world/entity/animal/goat/Goat.java
index 75af1b92a0a60cffa3317d83bd599a3d4d26f93c..5a779bdf23ba666dc1b0e54fa7895aa7dbbe9f7d 100644
--- a/net/minecraft/world/entity/animal/goat/Goat.java
+++ b/net/minecraft/world/entity/animal/goat/Goat.java
@@ -188,10 +188,12 @@ public class Goat extends Animal {
         return (Brain<Goat>)super.getBrain();
     }
 
+    private int behaviorTick = 0; // DeerFolia - pufferfish DAB
     @Override
     protected void customServerAiStep(ServerLevel level) {
         ProfilerFiller profilerFiller = Profiler.get();
         profilerFiller.push("goatBrain");
+        if (this.behaviorTick++ % this.activatedPriority == 0) // DeerFolia - pufferfish DAB
         this.getBrain().tick(level, this);
         profilerFiller.pop();
         profilerFiller.push("goatActivityUpdate");
diff --git a/net/minecraft/world/entity/animal/sniffer/Sniffer.java b/net/minecraft/world/entity/animal/sniffer/Sniffer.java
index 6a9f31c1f39cc14ad7b5ae3af85908bc7a4caae4..cc0dd7b8fc2cc22bd1daf8be42378ca46b8e1cc1 100644
--- a/net/minecraft/world/entity/animal/sniffer/Sniffer.java
+++ b/net/minecraft/world/entity/animal/sniffer/Sniffer.java
@@ -463,10 +463,12 @@ public class Sniffer extends Animal {
         return Brain.provider(SnifferAi.MEMORY_TYPES, SnifferAi.SENSOR_TYPES);
     }
 
+    private int behaviorTick = 0; // DeerFolia - pufferfish DAB
     @Override
     protected void customServerAiStep(ServerLevel level) {
         ProfilerFiller profilerFiller = Profiler.get();
         profilerFiller.push("snifferBrain");
+        if (this.behaviorTick++ % this.activatedPriority == 0) // DeerFolia - pufferfish DAB
         this.getBrain().tick(level, this);
         profilerFiller.popPush("snifferActivityUpdate");
         SnifferAi.updateActivity(this);
diff --git a/net/minecraft/world/entity/monster/hoglin/Hoglin.java b/net/minecraft/world/entity/monster/hoglin/Hoglin.java
index 0ecf8533f6cad081df8713856feb74db93028f71..ea9e43ab40aca85e3001924167ec2f737070d653 100644
--- a/net/minecraft/world/entity/monster/hoglin/Hoglin.java
+++ b/net/minecraft/world/entity/monster/hoglin/Hoglin.java
@@ -160,10 +160,12 @@ public class Hoglin extends Animal implements Enemy, HoglinBase {
         return (Brain<Hoglin>)super.getBrain();
     }
 
+    private int behaviorTick = 0; // DeerFolia - pufferfish DAB
     @Override
     protected void customServerAiStep(ServerLevel level) {
         ProfilerFiller profilerFiller = Profiler.get();
         profilerFiller.push("hoglinBrain");
+        if (this.behaviorTick++ % this.activatedPriority == 0) // DeerFolia - pufferfish DAB
         this.getBrain().tick(level, this);
         profilerFiller.pop();
         HoglinAi.updateActivity(this);
diff --git a/net/minecraft/world/entity/monster/piglin/Piglin.java b/net/minecraft/world/entity/monster/piglin/Piglin.java
index 8392ff1316f0c5be685a6ded7ccd08933c10ff4e..4eb309a38606c231603555467312cffe7192540d 100644
--- a/net/minecraft/world/entity/monster/piglin/Piglin.java
+++ b/net/minecraft/world/entity/monster/piglin/Piglin.java
@@ -318,10 +318,12 @@ public class Piglin extends AbstractPiglin implements CrossbowAttackMob, Invento
         return !this.cannotHunt;
     }
 
+    private int behaviorTick = 0; // DeerFolia - pufferfish DAB
     @Override
     protected void customServerAiStep(ServerLevel level) {
         ProfilerFiller profilerFiller = Profiler.get();
         profilerFiller.push("piglinBrain");
+        if (this.behaviorTick++ % this.activatedPriority == 0) // DeerFolia - pufferfish DAB
         this.getBrain().tick(level, this);
         profilerFiller.pop();
         PiglinAi.updateActivity(this);
diff --git a/net/minecraft/world/entity/monster/warden/Warden.java b/net/minecraft/world/entity/monster/warden/Warden.java
index 4a4cc7f9c95d4f4b6ad4948e3ed3504efbbcef15..362ef48f0177765f48af4535dffb6a227eb283a9 100644
--- a/net/minecraft/world/entity/monster/warden/Warden.java
+++ b/net/minecraft/world/entity/monster/warden/Warden.java
@@ -277,10 +277,12 @@ public class Warden extends Monster implements VibrationSystem {
         }
     }
 
+    private int behaviorTick = 0; // DeerFolia - pufferfish DAB
     @Override
     protected void customServerAiStep(ServerLevel level) {
         ProfilerFiller profilerFiller = Profiler.get();
         profilerFiller.push("wardenBrain");
+        if (this.behaviorTick++ % this.activatedPriority == 0) // DeerFolia - pufferfish DAB
         this.getBrain().tick(level, this);
         profilerFiller.pop();
         super.customServerAiStep(level);
diff --git a/net/minecraft/world/entity/npc/Villager.java b/net/minecraft/world/entity/npc/Villager.java
index 7d02def8b650a7574c1a6b0c212d6973d2b46f45..0d4fa69e87d755797c59025bff818107ff6d4698 100644
--- a/net/minecraft/world/entity/npc/Villager.java
+++ b/net/minecraft/world/entity/npc/Villager.java
@@ -179,6 +179,8 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
         (villager, poiType) -> poiType.is(PoiTypes.MEETING)
     );
 
+    public long nextGolemPanic = -1; // DeerFolia - pufferfish DAB
+
     public Villager(EntityType<? extends Villager> entityType, Level level) {
         this(entityType, level, VillagerType.PLAINS);
     }
@@ -287,6 +289,7 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
     }
     // Paper end - EAR 2
 
+    private int behaviorTick = 0; // DeerFolia - pufferfish DAB
     @Override
     protected void customServerAiStep(ServerLevel level) {
         // Paper start - EAR 2
@@ -296,7 +299,12 @@ public class Villager extends AbstractVillager implements ReputationEventHandler
         // Paper end - EAR 2
         ProfilerFiller profilerFiller = Profiler.get();
         profilerFiller.push("villagerBrain");
-        if (!inactive) this.getBrain().tick(level, this); // Paper - EAR 2
+        // DeerFolia start - pufferfish DAB
+        // if (!inactive) this.getBrain().tick(level, this); // Paper - EAR 2
+        if (!inactive && this.behaviorTick++ % this.activatedPriority == 0) {
+            this.getBrain().tick((ServerLevel) this.level(), this); // Paper
+        }
+        // DeerFolia end - pufferfish DAB
         profilerFiller.pop();
         if (this.assignProfessionWhenSpawned) {
             this.assignProfessionWhenSpawned = false;
